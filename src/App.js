import React, { useContext, useEffect, useState } from 'react';
import { AppContext } from './context/AppContext';
import Tabs from './components/layout/Tabs';
import InputTab from './components/InputTab/InputTab';
import PracticeTab from './components/PracticeTab/PracticeTab';
import OrderingTab from './components/OrderingTab/OrderingTab';
import Card from './components/common/Card';
import RewriteTab from './components/RewriteTab/RewriteTab';
import MockTestTab from './components/MockTestTab/MockTestTab';


function App() {
  const { activeTab } = useContext(AppContext);
  const [visitorCount, setVisitorCount] = useState(null);
  const [totalVisitorCount, setTotalVisitorCount] = useState(null);
  const [loadingVisitor, setLoadingVisitor] = useState(true);
  const [visitorError, setVisitorError] = useState('');

  // H√†m l·∫•y s·ªë truy c·∫≠p t·ª´ Netlify Function
  const fetchVisitorCount = async () => {
    setLoadingVisitor(true);
    setVisitorError('');
    try {
      const res = await fetch('/.netlify/functions/visitor-count');
      if (!res.ok) throw new Error('Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu truy c·∫≠p');
      const data = await res.json();
      setVisitorCount(data.visitorCount);
      setTotalVisitorCount(data.totalVisitorCount);
    } catch (err) {
      setVisitorCount(null);
      setTotalVisitorCount(null);
      setVisitorError('Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu truy c·∫≠p');
    } finally {
      setLoadingVisitor(false);
    }
  };

  useEffect(() => {
    fetchVisitorCount();
    // N·∫øu mu·ªën c·∫≠p nh·∫≠t realtime, c√≥ th·ªÉ d√πng interval:
    // const interval = setInterval(fetchVisitorCount, 10000);
    // return () => clearInterval(interval);
  }, []);

  return (
    <div className="app-container" style={{ position: 'relative' }}>
      <div style={{ position: 'absolute', top: 18, right: 18, zIndex: 1000, background: '#fff', borderRadius: 8, padding: '6px 16px', boxShadow: '0 2px 8px rgba(0,0,0,0.07)', fontWeight: 500, color: '#1976d2', fontSize: 15, minWidth: 260 }}>
        {loadingVisitor ? 'üë• ƒêang t·∫£i th·ªëng k√™...' :
          visitorError ? (
            <span style={{ color: 'red' }}>L·ªói th·ªëng k√™ truy c·∫≠p</span>
          ) : (
            visitorCount !== null && totalVisitorCount !== null
              ? `üë• ƒêang truy c·∫≠p: ${visitorCount} | T·ªïng truy c·∫≠p: ${totalVisitorCount}`
              : 'üë• ƒêang truy c·∫≠p...')
        }
        <button onClick={fetchVisitorCount} style={{ marginLeft: 12, fontSize: 13, border: 'none', background: '#e3f2fd', borderRadius: 6, padding: '2px 8px', cursor: 'pointer' }}>‚Üª</button>
      </div>
      <header>
        <h1>Luy·ªán thi OPIC</h1>
        <p>H·ªçc ti·∫øng Anh qua vi·ªác ƒëi·ªÅn t·ª´, s·∫Øp x·∫øp c√¢u v√† luy·ªán vi·∫øt l·∫°i c√¢u</p>
      </header>
      <main>
        <Card>
          <Tabs tabs={['Nh·∫≠p li·ªáu', 'Luy·ªán t·∫≠p', 'S·∫Øp x·∫øp c√¢u', 'Vi·∫øt l·∫°i c√¢u', 'Thi th·ª≠']} />
          <div className="tab-content">
            {activeTab === 'Nh·∫≠p li·ªáu' && <InputTab />}
            {activeTab === 'Luy·ªán t·∫≠p' && <PracticeTab />}
            {activeTab === 'S·∫Øp x·∫øp c√¢u' && <OrderingTab />}
            {activeTab === 'Vi·∫øt l·∫°i c√¢u' && <RewriteTab />}
            {activeTab === 'Thi th·ª≠' && <MockTestTab />}
          </div>
        </Card>
      </main>
    </div>
  );
// ...ph·∫ßn c√≤n l·∫°i c·ªßa App.js
}
export default App;
//git add . && git commit -m "C·∫≠p nh·∫≠t logic Tab S·∫Øp x·∫øp v√† Luy·ªán t·∫≠p" && git push